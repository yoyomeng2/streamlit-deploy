: Deploy via Snowflake CLI

on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  PYTHON_VERSION: "3.11"
  SNOWFLAKE_CLI_VERSION: "3.9.0"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: Install uv
        shell: bash
        run: |
          curl -Ls https://github.com/astral-sh/uv/releases/latest/download/uv-x86_64-unknown-linux-gnu.tar.gz | tar -xz
          sudo mv uv /usr/local/bin/uv
          uv --version
        
      - name: Install Python
        shell: bash
        run: |
          uv python install ${{ env.PYTHON_VERSION }}
          uv run python --version

      - name: "Install Dependencies"
        shell: bash
        run: |
          uv sync

      - name: "Test"
        shell: bash
        run: |
          uv run pytest

      - name: "Create config"
        shell: bash
        run: |
          mkdir -p ~/.snowflake
          cp config.toml ~/.snowflake/config.toml
          chmod 0600 ~/.snowflake/config.toml

      - name: "Write private key"
        shell: bash
        env:
          PRIVATE_KEY_FILE_CONTENT: ${{ secrets.PRIVATE_KEY_FILE_CONTENT }}
        run: |
          printf "%s" "$PRIVATE_KEY_FILE_CONTENT" > rsa_key.p8
          chmod 0600 rsa_key.p8

      - uses: snowflakedb/snowflake-cli-action@v1.5
        with:
          cli-version: ${{ env.SNOWFLAKE_CLI_VERSION }}

      - name: "Deploy the Streamlit app"
        shell: bash
        env:
          SNOWFLAKE_CONNECTIONS_MYCONNECTION_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCUNT }}
          SNOWFLAKE_CONNECTIONS_MYCONNECTION_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_CONNECTIONS_MYCONNECTION_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_CONNECTIONS_MYCONNECTION_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_CONNECTIONS_MYCONNECTION_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          PRIVATE_KEY_PASSPHRASE: ${{ secrets.PRIVATE_KEY_PASSPHRASE }}
        run: |
          snow streamlit deploy --replace
