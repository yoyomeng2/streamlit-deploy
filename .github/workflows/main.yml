name: Deploy via Snowflake CLI

on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  PYTEST_PYTHON_VERSION: "3.8"  # So that Streamlit tests match same python version that Snowflake provides
  DEPLOY_PYTHON_VERSION: "3.10" # So that `snow streamlit deploy` can use the snowflake.yml schema that `snow init` creates

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v3

      - name: Install Python for testing
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTEST_PYTHON_VERSION }}

      - name: "Install Dependencies"
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: "Test"
        shell: bash
        run: |
          pip install pytest
          pytest -vv

      - name: "Create config"
        shell: bash
        run: |
          mkdir -p ~/.snowflake
          cp config.toml ~/.snowflake/config.toml
          chmod 0600 ~/.snowflake/config.toml

      - name: "Write private key"
        shell: bash
        env:
          PRIVATE_KEY_FILE_CONTENT: ${{ secrets.PRIVATE_KEY_FILE_CONTENT }}
        run: |
          printf "%s" "$PRIVATE_KEY_FILE_CONTENT" > rsa_key.p8
          chmod 0600 rsa_key.p8

      - name: Install Python for deployment
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEPLOY_PYTHON_VERSION }}

      - name: "Deploy the Streamlit app"
        shell: bash
        env:
          SNOWFLAKE_CLI_VERSION: "3.1.0"
          PRIVATE_KEY_PASSPHRASE: ${{ secrets.PRIVATE_KEY_PASSPHRASE }}
        run: |
          pip install snowflake-cli==$SNOWFLAKE_CLI_VERSION
          snow streamlit deploy --replace
